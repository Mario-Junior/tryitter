// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tryitter.Repository;

#nullable disable

namespace Tryitter.Application.Migrations
{
    [DbContext(typeof(TryitterContext))]
    partial class TryitterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tryitter.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21ad69ad-63d2-46f5-8bda-8b704a5f211b"),
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Image = "http://local.com/post1.jpg",
                            Text = "Post 1",
                            UpdatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Username = "user1"
                        },
                        new
                        {
                            Id = new Guid("e2ab3cd8-e088-4b92-ac1a-dc724919ac93"),
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Image = "http://local.com/post2.jpg",
                            Text = "Post 2",
                            UpdatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Username = "user1"
                        },
                        new
                        {
                            Id = new Guid("8c85b80a-c91d-43fe-b88b-93b502f844c1"),
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Image = "http://local.com/post3.jpg",
                            Text = "Post 3",
                            UpdatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Username = "user1"
                        },
                        new
                        {
                            Id = new Guid("31255d37-5778-498a-80b5-9ed9598582e3"),
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Image = "http://local.com/post1.jpg",
                            Text = "Post 1",
                            UpdatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Username = "user2"
                        },
                        new
                        {
                            Id = new Guid("1c529c71-586e-48a7-92bf-b19d92b18540"),
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Image = "http://local.com/post2.jpg",
                            Text = "Post 2",
                            UpdatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Username = "user2"
                        },
                        new
                        {
                            Id = new Guid("038b4a0e-bf51-4e8f-95cb-d0d97312cb22"),
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Image = "http://local.com/post1.jpg",
                            Text = "Post 1",
                            UpdatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Username = "user3"
                        });
                });

            modelBuilder.Entity("Tryitter.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Module")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Photo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Status")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "user1",
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "user1@test.com",
                            Module = "Computer Science",
                            Name = "User 1",
                            Password = "user1234",
                            Photo = "http://local.com/user1.jpg",
                            Status = "Using Tryitter"
                        },
                        new
                        {
                            Username = "user2",
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "user2@test.com",
                            Module = "Computer Science",
                            Name = "User 2",
                            Password = "user1234",
                            Photo = "http://local.com/user2.jpg",
                            Status = "Using Tryitter"
                        },
                        new
                        {
                            Username = "user3",
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "user3@test.com",
                            Module = "Computer Science",
                            Name = "User 3",
                            Password = "user1234",
                            Photo = "http://local.com/user3.jpg",
                            Status = "Using Tryitter"
                        },
                        new
                        {
                            Username = "user4",
                            CreatedAt = new DateTime(2022, 12, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "user4@test.com",
                            Module = "Computer Science",
                            Name = "User 4",
                            Password = "user1234",
                            Photo = "http://local.com/user4.jpg",
                            Status = "Using Tryitter"
                        });
                });

            modelBuilder.Entity("Tryitter.Models.Post", b =>
                {
                    b.HasOne("Tryitter.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tryitter.Models.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
