// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tryitter.Repository;

#nullable disable

namespace Tryitter.Application.Migrations
{
    [DbContext(typeof(TryitterContext))]
    [Migration("20221213230706_CreateTables")]
    partial class CreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tryitter.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Username");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d180bbb-3eb8-43ec-b891-b8c088ed8ba1"),
                            CreatedAt = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Image = "http://local.com/post1.jpg",
                            Text = "Post 1",
                            UpdatedAt = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Username = "user1"
                        },
                        new
                        {
                            Id = new Guid("50091f8c-d738-4df9-b3cd-a4dad58382bb"),
                            CreatedAt = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Image = "http://local.com/post2.jpg",
                            Text = "Post 2",
                            UpdatedAt = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Username = "user1"
                        },
                        new
                        {
                            Id = new Guid("3c3b3cda-8fc9-4049-adae-63599b849eb4"),
                            CreatedAt = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Image = "http://local.com/post1.jpg",
                            Text = "Post 1",
                            UpdatedAt = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Tryitter.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Module")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Photo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Status")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "user1",
                            CreatedAt = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "user1@test.com",
                            Module = "Computer Science",
                            Name = "User 1",
                            Password = "user1234",
                            Photo = "http://local.com/user1.jpg",
                            Status = "Using Tryitter"
                        },
                        new
                        {
                            Username = "user2",
                            CreatedAt = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "user2@test.com",
                            Module = "Computer Science",
                            Name = "User 2",
                            Password = "user1234",
                            Photo = "http://local.com/user2.jpg",
                            Status = "Using Tryitter"
                        },
                        new
                        {
                            Username = "user3",
                            CreatedAt = new DateTime(2022, 12, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "user3@test.com",
                            Module = "Computer Science",
                            Name = "User 3",
                            Password = "user1234",
                            Photo = "http://local.com/user3.jpg",
                            Status = "Using Tryitter"
                        });
                });

            modelBuilder.Entity("Tryitter.Models.Post", b =>
                {
                    b.HasOne("Tryitter.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tryitter.Models.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
